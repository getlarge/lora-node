#ifndef config_h
#define config_h

// Sketch
#define SKETCH_NAME "[ALOES COSMONODE]"
#define SKETCH_VERSION "0.8"

// -----------------------------------------------------------------------------
// FEATURES
// -----------------------------------------------------------------------------

#define DEBUG 2 // from 0 to 4
#define FEATURE_LORAWAN 1
#define FEATURE_NFC 1
#define FEATURE_CAYENNE 0

#define FEATURE_INTERRUPT_PIN // Must be kept ON for now
#define FEATURE_POWER_MANAGER 0
//#define FEATURE_BATTERY_SENSOR
//#define FEATURE_LEDS

//#define USE_NEO_SOFTSERIAL
#define USE_SOFTSERIAL

//#define USE_DIGIT_INPUT
//#define USE_DIGIT_OUTPUT
//#define USE_ANALOG_INPUT
//#define USE_BH1750
//#define USE_AM2320
//#define USE_HCSR04
//#define USE_CURRENT_SENSOR

// Scheduling configuration
#define SLEEP_INTERVAL      10000   // Sleep intervals of x milliseconds ( default = 10000 )
#define READING_COUNTS      2   // Perform a sensor average reading every (x * SLEEP_INTERVAL ) ms (default = 6)
#define SENDING_COUNTS      2   // Send readings after x * READING_COUNTS ( default = 5 )

// -----------------------------------------------------------------------------
// NETWORK
// -----------------------------------------------------------------------------

// SERIAL
#define SERIAL_BAUD         115200
#define SOFTSERIAL_BAUD     9600

// LORAWAN
#if FEATURE_LORAWAN == 1
#define JOIN_DURATION 10000
//#define USE_ABP_AUTH
#define USE_OTAA_AUTH

#ifdef USE_ABP_AUTH
#define DEVADDR  ""        
String appsKey = "";
String nwksKey = "";
#elif defined(USE_OTAA_AUTH)      
String appEui = "";
String appKey = "";

#endif
#endif
// -----------------------------------------------------------------------------
// GPIO
// -----------------------------------------------------------------------------

#if FEATURE_LORAWAN == 1
#define SOFTSERIAL_RX_PIN   3 //3 , 8
#define SOFTSERIAL_TX_PIN   4 //4, 9
#define RN2483_RESET_PIN    5 //5, 10
#endif

#if FEATURE_POWER_MANAGER == 1
#define VCC_PIN_1   A7
#define VCC_PIN_2   A6
#define GND_PIN   6
#endif

#ifdef FEATURE_INTERRUPT_PIN
#define INTERRUPT_PIN       1
#endif

#if FEATURE_NFC == 1
#define NFC_SS_PIN 9
#define NFC_BUFFER_SIZE 76
#endif

// CAYENNE
#if FEATURE_CAYENNE == 1
#define PAYLOAD_SIZE  60
#endif 

#ifdef FEATURE_BATTERY_SENSOR
#define BATTERY_PIN         A3
#endif

#ifdef FEATURE_LEDS
#define LED_PIN_1           8 //8, A6
#define LED_PIN_2           10 //10, A7
#endif

#ifdef USE_CURRENT_SENSOR
#define CURRENT_PIN         A1
#endif

#ifdef USE_DIGIT_INPUT
#define DIGIT_INPUT_PIN_1        A0
#define DIGIT_INPUT_PIN_2        A1
#endif

#ifdef USE_HCSR04
#define TRIGGER_PIN  7  // Arduino pin tied to trigger pin on the ultrasonic sensor.
#define ECHO_PIN     6  // Arduino pin tied to echo pin on the ultrasonic sensor.
#define MAX_DISTANCE 400 // Maximum distance we want to ping for (in centimeters). Maximum sensor distance is rated at 400-500cm.
#endif

// -----------------------------------------------------------------------------
// Sensor Calibration
// -----------------------------------------------------------------------------

#ifdef USE_CURRENT_SENSOR
// For a ECS1030-L72 CT
// Specs: 2000 turns ratio (T) without built-in burdenresistor
// Using 68 ohm burden resistor (R)
// A/V = T/R = 2000 * 68 = 29.41
// Real life comparisons showed a 10% bias with this value
// So I am using a correction factor
//#define CURRENT_RATIO       26.20
// For a YHDC SCT013
// Specs: 30A/1V
#define CURRENT_RATIO       30.00
// Number of samples to take for each reading
#define CURRENT_SAMPLES     1000
// Mains voltage to calculate apparent power
#define MAINS_VOLTAGE       230
// ADC precission
#define ADC_BITS            10
#define ADC_COUNTS          (1 << ADC_BITS)
// ADC reference volatge in V
#define ADC_REFERENCE       3.3
#endif

#ifdef FEATURE_BATTERY_SENSOR
// Battery monitoring circuitry:
// Vi -- R1 -- A1 (Vo) -- R2 -- D12 (GND)
// These values have been measured with a multimeter:
// R1 = 470K
// R2 = 470k
// Formulae:
// Vo = Vi * R2 / (R1 + R2)
// Vi = Vo * (R1 + R2) / R2
// Vo = X * 3300 / 1024;
// Thus:
// Vi = X * 3300 * (470 + 470) / 1024 / 470;
#define BATTERY_RATIO       6.45
#endif

#endif

